<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="MyApps.DeviceList.DeviceItemDetailPage"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:MyApps.DeviceList"
    xmlns:common="using:MyApps.DeviceList.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>

        <!-- このページで表示されるアイテムのコレクション -->
        <CollectionViewSource
            x:Name="itemsViewSource"
            Source="{Binding Items}"/>

    </Page.Resources>

    <!--
        このグリッドは 2 つの行を定義するページのルート パネルとして機能します:
        * 行 0 には [戻る] ボタンおよびページ タイトルが含まれます
        * 行 1 には残りのページ レイアウトが含まれます
    -->
    <Grid Style="{StaticResource LayoutRootStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!--
            このページの残りは 1 つの大きな FlipView です。ここには、一度に
             1 つのアイテムの詳細が表示され、ユーザーは選択されたグループ内のすべてのアイテムを見ることが
            できます
        -->
        <FlipView x:Name="flipView"
            AutomationProperties.AutomationId="ItemsFlipView"
            AutomationProperties.Name="Item Details"
            TabIndex="1"
            Grid.RowSpan="2"
            ItemsSource="{Binding Source={StaticResource itemsViewSource}}"
            SelectionChanged="FlipView_SelectionChanged">

            <FlipView.ItemContainerStyle>
                <Style TargetType="FlipViewItem">
                    <Setter Property="Margin" Value="0,137,0,0"/>
                </Style>
            </FlipView.ItemContainerStyle>
 
            <FlipView.ItemTemplate>
                <DataTemplate>
                    <!--
                        表示状態管理をサポートしているため、テンプレート化されたアイテムとして選択された UserControl
                        読み込まれた/アンロードされたイベントが、ページからのビューステートの更新を明示的に定期受信します
                    -->
                    <UserControl  Loaded="StartLayoutUpdates" Unloaded="StopLayoutUpdates">
                        <ScrollViewer x:Name="scrollViewer" Style="{StaticResource HorizontalScrollViewerStyle}" Grid.Row="1">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <!-- メインっぽいプロパティ -->
                                <StackPanel 
                                    x:Name="mainPropertyPanel"
                                    Grid.Row="0" Grid.Column="0" Grid.RowSpan="2"
                                    Orientation="Vertical" HorizontalAlignment="Left" VerticalAlignment="Top"
                                    Margin="116,0,40,46" Width="300">
                                    <TextBlock
                                        Text="{Binding Path=DisplayName}"
                                        Style="{StaticResource SubheaderTextStyle}"
                                        TextWrapping="Wrap" />
                                    <Image 
                                        Source="{Binding Path=ThumbnailBitmapImage}" 
                                        Stretch="None"
                                        Margin="0,20,0,0"/>
                                </StackPanel>

                                <!-- コンテンツは、必要な数の列をフローできます -->
                                <common:RichTextColumns 
                                    x:Name="richTextColumns" 
                                    Grid.Row="0" Grid.Column="1" Grid.RowSpan="2"
                                    Margin="117,0,117,47">
                                    <RichTextBlock x:Name="richTextBlock" Width="350" Style="{StaticResource ItemRichTextStyle}" IsTextSelectionEnabled="True">
                                        <Paragraph>
                                            <Run FontWeight="Bold" Text="{Binding Source={StaticResource MyStringResource}, Path=[DetailColumnTitleDeviceProperty]}" />
                                            <LineBreak />
                                            <LineBreak />
                                            <Run FontWeight="SemiLight" Text="{Binding Path=DevicePropertiesText}"/>
                                        </Paragraph>

                                        <Paragraph>
                                            <Run FontWeight="Bold" Text="{Binding Source={StaticResource MyStringResource}, Path=[DetailColumnTitleDeviceContainerProperty]}" />
                                            <LineBreak />
                                            <LineBreak />
                                            <Run FontWeight="SemiLight" Text="{Binding Path=ContainerPropertiesText}"/>
                                        </Paragraph>
                                    </RichTextBlock>

                                    <!-- 追加の列は、このテンプレートから作成されます -->
                                    <common:RichTextColumns.ColumnTemplate>
                                        <DataTemplate>
                                            <RichTextBlockOverflow Width="560" Margin="80,0,0,0">
                                                <RichTextBlockOverflow.RenderTransform>
                                                    <TranslateTransform X="-1" Y="4"/>
                                                </RichTextBlockOverflow.RenderTransform>
                                            </RichTextBlockOverflow>
                                        </DataTemplate>
                                    </common:RichTextColumns.ColumnTemplate>
                                </common:RichTextColumns>
                            </Grid>

                            <VisualStateManager.VisualStateGroups>

                                <!-- 表示状態には、FlipView 内のアプリケーションのビューステートが反映されます -->
                                <VisualStateGroup x:Name="ApplicationViewStates">
                                    <VisualState x:Name="FullScreenLandscape"/>
                                    <VisualState x:Name="Filled"/>

                                    <!-- 縦方向に対して、より狭い 100 ピクセルの余白の規則を優先します -->
                                    <!-- StackPanelとRichTextColumnsを縦に並べる -->
                                    <VisualState x:Name="FullScreenPortrait">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="richTextColumns" Storyboard.TargetProperty="Margin">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="97,0,87,57"/>
                                            </ObjectAnimationUsingKeyFrames>

                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="mainPropertyPanel" Storyboard.TargetProperty="(Grid.Row)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="mainPropertyPanel" Storyboard.TargetProperty="(Grid.RowSpan)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="mainPropertyPanel" Storyboard.TargetProperty="(Grid.Column)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="mainPropertyPanel" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="2"/>
                                            </ObjectAnimationUsingKeyFrames>

                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="richTextColumns" Storyboard.TargetProperty="(Grid.Row)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="richTextColumns" Storyboard.TargetProperty="(Grid.RowSpan)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="richTextColumns" Storyboard.TargetProperty="(Grid.Column)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="richTextColumns" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="2"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>

                                    <!-- スナップの場合、コンテンツは再フォーマットされ、垂直にスクロールします -->
                                    <VisualState x:Name="Snapped">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="richTextColumns" Storyboard.TargetProperty="Margin">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="17,0,17,57"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="scrollViewer" Storyboard.TargetProperty="Style">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource VerticalScrollViewerStyle}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="richTextBlock" Storyboard.TargetProperty="Width">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="280"/>
                                            </ObjectAnimationUsingKeyFrames>


                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="mainPropertyPanel" Storyboard.TargetProperty="Margin">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="10,0,10,30"/>
                                            </ObjectAnimationUsingKeyFrames>

                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="mainPropertyPanel" Storyboard.TargetProperty="(Grid.Row)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="mainPropertyPanel" Storyboard.TargetProperty="(Grid.RowSpan)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="mainPropertyPanel" Storyboard.TargetProperty="(Grid.Column)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="mainPropertyPanel" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="2"/>
                                            </ObjectAnimationUsingKeyFrames>

                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="richTextColumns" Storyboard.TargetProperty="(Grid.Row)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="richTextColumns" Storyboard.TargetProperty="(Grid.RowSpan)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="richTextColumns" Storyboard.TargetProperty="(Grid.Column)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="richTextColumns" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="2"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </ScrollViewer>
                    </UserControl>
                </DataTemplate>
            </FlipView.ItemTemplate>
        </FlipView>

        <!-- [戻る] ボタンおよびページ タイトル-->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
            <TextBlock x:Name="pageTitle" Text="{Binding Source={StaticResource MyStringResource}, Path=[DeviceItemDetailPageTitle]}" Style="{StaticResource PageHeaderTextStyle}" Grid.Column="1" IsHitTestVisible="false"/>
        </Grid>

        <VisualStateManager.VisualStateGroups>

            <!--表示状態には、アプリケーションのビューステートが反映されます -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- [戻る] ボタンは、縦方向に対して、より狭い 100 ピクセルの余白の規則を優先します -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!-- スナップの場合、[戻る] ボタンとタイトルはスタイルが異なります -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
